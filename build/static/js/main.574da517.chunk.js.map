{"version":3,"sources":["queries.js","components/LoginForm.js","components/SignupForm.js","reducers/postsReducer.js","utils/setPublishedTime.js","components/CommentsModal.js","components/LikesModal.js","components/Post.js","components/Homepage.js","components/UploadPicture.js","components/AddPostModal.js","utils/fileValidator.js","components/Users.js","components/Chat.js","components/User.js","reducers/userReducer.js","reducers/usersReducer.js","App.js","store.js","index.js"],"names":["USER_DETAILS","gql","COMMENT_DETAILS","LIKE_DETAILS","POST_DETAILS","MESSAGE_DETAILS","LOGIN","CREATE_USER","ADD_LIKE","ADD_COMMENT","ALL_COMMENTS","UPLOAD_FILE","UNLIKE","DELETE_POST","ADD_POST","ADD_MESSAGE","ALL_MESSAGES","MESSAGE_ADDED","ALL_USERS","ALL_POSTS","FACEBOOK_LOGIN","GOOGLE_LOGIN","GET_USER","POST_ADDED","stringifiedFacebookParams","queryString","client_id","redirect_uri","scope","join","response_type","auth_type","display","stringifiedGoogleParams","access_type","prompt","facebookLoginUrl","googleLoginUrl","urlParams","window","location","search","LoginForm","setToken","refetchUser","setError","useState","username","setUsername","password","setPassword","history","useHistory","useMutation","onError","error","graphQLErrors","message","login","result","console","log","facebookLogin","facebookLoginResult","useEffect","data","token","value","localStorage","setItem","push","code","variables","submit","event","a","preventDefault","Form","onSubmit","Group","controlId","Label","Control","type","placeholder","onChange","target","to","Button","variant","primary","className","href","color","Icon","name","SignupForm","countries","refetchQueries","query","createUser","logInResult","firstName","setFirstName","lastName","setLastName","description","setDescription","city","setCity","country","setCountry","Date","date","setDate","axios","get","then","response","forEach","text","flag","alpha2Code","toLowerCase","key","e","dateToString","toString","born","Row","as","Col","required","rows","autoComplete","Dropdown","fluid","selection","options","selected","dateFormat","postsReducer","state","action","posts","allPosts","byDate","slice","sort","b","getTime","id","like","post","find","p","newPost","likes","concat","map","postId","postd","newPostd","filter","l","removedPost","filteredPosts","comment","postToAdd","addedPost","comments","setPublishedTime","object","date1","date2","diff_result","dayDiff","Math","floor","monthDiff","getMonth","yearDiff","getFullYear","hourDiff","minuteDiff","getMinutes","secondDiff","getSeconds","CommentsModal","React","forwardRef","ref","showCommentsModal","setShowCommentsModal","setMessageHeader","emptyMessageHeader","useDispatch","content","setContent","setComments","submitButtonDisabled","setSubmitButtonDisabled","submitButtonContent","setSubmitButtonContent","commentGroup","createRef","useLazyQuery","notifyOnNetworkStatusChange","getComments","refetch","loading","networkStatus","addComment","addCommentResult","allComments","scrollToBottom","current","scrollIntoView","behavior","useImperativeHandle","Modal","show","onHide","aria-labelledby","Header","closeButton","Title","Body","Comment","length","user","profilePicture","Avatar","src","imageUrl","size","Content","Author","Metadata","Text","TextArea","labelPosition","icon","disabled","LikesModal","showLikesModal","setShowLikesModal","Feed","Event","image","Summary","Post","isVideoPlaying","setIsVideoPlaying","setSelectedPost","commentsRef","dispatch","isVideoOnScreen","setIsVideoOnScreen","likeResult","unlike","unlikeResult","deletePost","deletePostResult","likeButton","useRef","unlikeButton","deletePostButton","postVideo","addLike","removeLike","play","renderLikeButton","onClick","likePost","unlikePost","renderLink","str","isStr","word","substr","rel","Card","xs","urlRE","RegExp","words","split","pop","i","match","parentNode","innerHTML","renderContent","Img","video","onEnter","onLeave","pause","controls","loop","videoUrl","confirm","textContent","removePost","Homepage","logout","setMessageContent","useSelector","selectedPost","UploadPicture","setImage","validity","file","files","valid","AddPostModal","showModal","setShowModal","addPost","addPostResult","handleImageUpload","imageFile","Blob","maxSizeMB","useWebWorker","imageCompression","compressedFile","placeholderText","URL","createObjectURL","Users","allUsers","users","setUsers","setSearch","some","val","indexOf","Input","sm","md","lg","Image","wrapped","ui","Meta","Description","extra","Chat","messages","useQuery","setMessage","addMessage","addMessageResult","messageGroup","block","inline","allMessages","reply","User","signleUpload","uploadFileResult","useParams","currentUser","Item","fileInput","document","getElementById","click","accept","widths","label","userReducer","me","usersReducer","App","client","useApolloClient","errorMessage","setErrorMessage","messageHeader","messageContent","showNewPostsButton","setShowNewPostsButton","useSubscription","onSubscriptionData","subscriptionData","postAdded","set","dataInStore","readQuery","includes","writeQuery","updatePostCacheWith","addedMessage","updateMessageCacheWith","messageAdded","title","setTimeout","getItem","initializePosts","initializeUsers","initializeUser","notify","updatePosts","Notify","Alert","clear","resetStore","path","Message","header","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","authLink","setContext","_","headers","authorization","httpLink","createUploadLink","uri","wsLink","WebSocketLink","reconnect","splitLink","definition","getMainDefinition","kind","operation","ApolloLink","from","ApolloClient","cache","InMemoryCache","link","ReactDOM","render","ApolloProvider"],"mappings":"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","file":"static/js/main.574da517.chunk.js","sourcesContent":["import { gql  } from '@apollo/client'\n\nconst USER_DETAILS = gql`\n  fragment UserDetails on User {\n    name\n    username\n    id\n    description\n    born\n    country\n    city\n    profilePicture {\n      imageUrl\n    }\n    posts {\n      content\n    }\n  }\n`\n\nconst COMMENT_DETAILS = gql`\n  fragment CommentDetails on Comment {\n    content\n    date\n    id\n    post {\n      id\n    }\n    user {\n      id\n      username\n      profilePicture {\n        imageUrl\n      }\n    }\n  }\n`\n\nconst LIKE_DETAILS = gql`\n  fragment LikeDetails on Like {\n    id\n    date\n    user {\n      id\n      username\n      profilePicture {\n        imageUrl\n      }\n    }\n    post {\n      id\n      content\n    }\n  }\n`\n\nconst POST_DETAILS = gql`\n  fragment PostDetails on Post {\n    content\n    date\n    time\n    id\n    image {\n      imageUrl\n    }\n    video {\n      videoUrl\n    }\n    user {\n      id\n      username\n      name\n      profilePicture {\n        imageUrl\n      }\n    }\n    comments {\n      content\n      date\n      user {\n        username\n        profilePicture {\n          imageUrl\n        }\n      }\n    }\n    likes {\n      date\n      time\n      id\n      user {\n        id\n        username\n        profilePicture {\n          imageUrl\n        }\n      }\n    }\n  }\n`\n\nconst MESSAGE_DETAILS = gql`\n  fragment MessageDetails on Message {\n    message\n    id\n    date\n    user {\n      name\n      id\n      username\n      profilePicture {\n        imageUrl\n      }\n    }\n  }\n`\n\nexport const LOGIN = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password)  {\n      value\n    }\n  }\n`\n\nexport const CREATE_USER = gql`\n  mutation createUser($name: String!, $username: String!, $password: String!, $description: String!, $country: String!, $city: String!, $born: String!) {\n    createUser(name: $name, username: $username, password: $password, description: $description, country: $country, city: $city, born: $born) {\n      username\n      name\n    }\n  }\n`\n\nexport const ADD_LIKE = gql`\n  mutation addLike($post: String!) {\n    addLike(post: $post) {\n      ...LikeDetails\n    }\n  }\n  ${LIKE_DETAILS}\n`\n\nexport const ADD_COMMENT = gql`\n  mutation addComment($post: String!, $content: String!) {\n    addComment(post: $post, content: $content) {\n      ...CommentDetails\n    }\n  }\n  ${COMMENT_DETAILS}\n`\n\nexport const ALL_COMMENTS = gql`\n  query allComments($post: String){\n    allComments(post: $post) {\n      ...CommentDetails\n    }\n  }\n  ${COMMENT_DETAILS}\n`\n\nexport const UPLOAD_FILE = gql`\n  mutation singleUpload($file: Upload!) {\n    singleUpload(file: $file) {\n      imageUrl\n      imageType\n    }\n  }\n`\n\nexport const FILES = gql`\n  query {\n    files\n  }\n`\n\nexport const UPLOADS = gql`\n  query {\n    profilePictures {\n      imageType\n      imageUrl\n      user {\n        username\n      }\n    }\n  }\n`\n\nexport const UNLIKE = gql`\n  mutation unlike($post: String!) {\n    unlike(post: $post) {\n      ...LikeDetails\n    }\n  }\n  ${LIKE_DETAILS}\n`\n\nexport const DELETE_POST = gql`\n  mutation deletePost($post: String!) {\n    deletePost(post: $post) {\n      id\n      content\n      user {\n        id\n        username\n      }\n    }\n  }\n`\n\nexport const ADD_POST = gql`\n  mutation addPost($content: String!, $file: Upload) {\n    addPost(content: $content, file: $file) {\n      ...PostDetails\n    }\n  }\n  ${POST_DETAILS}\n`\n\nexport const ADD_MESSAGE = gql`\n  mutation addMessage($message: String!) {\n    addMessage(message: $message) {\n      ...MessageDetails\n    }\n  }\n  ${MESSAGE_DETAILS}\n`\n\nexport const ALL_MESSAGES = gql`\n  query {\n    allMessages {\n      ...MessageDetails\n    }\n  }\n  ${MESSAGE_DETAILS}\n`\n\nexport const MESSAGE_ADDED = gql`\n  subscription {\n    messageAdded {\n      ...MessageDetails\n    }\n  }\n  ${MESSAGE_DETAILS}\n`\n\nexport const ALL_USERS = gql`\n  query {\n    allUsers  {\n      ...UserDetails\n    }\n  }\n  ${USER_DETAILS}\n`\n\nexport const ALL_POSTS = gql`\n  query  {\n    allPosts {\n      ...PostDetails\n    }\n  }\n  ${POST_DETAILS}\n`\n\nexport const MORE_POSTS = gql`\n  query MorePosts($cursor: String) {\n    morePosts(cursor: $cursor) {\n      cursor\n      posts {\n        ...PostDetails\n      }\n    }\n  }\n  ${POST_DETAILS}\n`\n\nexport const FACEBOOK_LOGIN = gql`\n  mutation facebookLogin($code: String) {\n    facebookLogin(code: $code) {\n      value\n    }\n  }\n`\n\nexport const GOOGLE_LOGIN = gql`\n  mutation googleLogin($code: String) {\n    googleLogin(code: $code) {\n      value\n    }\n  }\n`\n\nexport const GET_USER = gql`\n  query {\n    me {\n      ...UserDetails\n    }\n  }\n  ${USER_DETAILS}\n`\n\nexport const POST_ADDED = gql`\n  subscription {\n    postAdded {\n      ...PostDetails\n    }\n  }\n  ${POST_DETAILS}\n`\n","import React, {useState, useEffect} from 'react'\nimport { useMutation } from '@apollo/client'\nimport {FACEBOOK_LOGIN, GOOGLE_LOGIN} from '../queries'\nimport { Form} from 'react-bootstrap';\nimport {LOGIN} from '../queries'\nimport {Button, Icon} from 'semantic-ui-react'\nimport {\n  Link, useHistory\n} from \"react-router-dom\"\nimport * as queryString from 'query-string'\nimport axios from \"axios\"\n\n\nconst stringifiedFacebookParams = queryString.stringify({\n  client_id: 261645038439241,\n  redirect_uri: 'http://localhost:3000/',\n  scope: ['email', 'user_friends', 'user_birthday', 'user_hometown', 'user_location'].join(','), // comma seperated string\n  response_type: 'code',\n  auth_type: 'rerequest',\n  display: 'popup',\n});\n\nconst stringifiedGoogleParams = queryString.stringify({\n  client_id: \"769250645795-gqedodb607rontuq1bbjmsiic0a9jai1.apps.googleusercontent.com\",\n  redirect_uri: 'http://localhost:3000/',\n  scope: 'profile email https://www.googleapis.com/auth/user.addresses.read https://www.googleapis.com/auth/user.birthday.read',\n  response_type: 'code',\n  access_type: 'offline',\n  prompt: 'consent',\n});\n\nconst facebookLoginUrl = `https://www.facebook.com/v4.0/dialog/oauth?${stringifiedFacebookParams}`;\nconst googleLoginUrl = `https://accounts.google.com/o/oauth2/v2/auth?${stringifiedGoogleParams}`;\n\nconst urlParams = queryString.parse(window.location.search);\n\nconst LoginForm = ({setToken, refetchUser, setError}) => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const history = useHistory()\n\n  const [ login, result ] = useMutation(LOGIN, {\n    onError: (error) => {\n      setError(error.graphQLErrors[0].message)\n    }\n  })\n\n  const [facebookLogin, facebookLoginResult] = useMutation(FACEBOOK_LOGIN, {\n    onError: (error) => {\n      console.log(error.graphQLErrors[0].message)\n    }\n  })\n\n  const [googleLogin, googleLoginResult] = useMutation(GOOGLE_LOGIN, {\n    onError: (error) => {\n      console.log(error.graphQLErrors[0].message)\n    }\n  })\n\n  useEffect(() => {\n    if (facebookLoginResult.data) {\n      const token = facebookLoginResult.data.facebookLogin.value\n      setToken(token)\n      localStorage.setItem('user-token', token)\n      refetchUser()\n      history.push(\"/\")\n    }\n  }, facebookLoginResult.data)\n\n  useEffect(() => {\n    if (urlParams.code) {\n      facebookLogin({variables: {code: urlParams.code}})\n    }\n  }, [])\n\n  useEffect(() => {\n    if ( result.data ) {\n      const token = result.data.login.value\n      setToken(token)\n      localStorage.setItem('user-token', token)\n      refetchUser()\n      history.push(\"/\")\n    }\n  }, [result.data]) // eslint-disable-line\n\n  const submit = async (event) => {\n    event.preventDefault()\n    console.log(username, password)\n    login({ variables: { username, password } })\n  }\n\n  const setForm = () => {\n    return (\n      <Form onSubmit={submit}>\n        <Form.Group controlId=\"formBasicUsername\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Enter username\" onChange={({target}) => setUsername(target.value)} />\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control type=\"password\" placeholder=\"Password\" onChange={({target}) => setPassword(target.value)}/>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicCheckbox\">\n          <Link to=\"/signup\">Sign Up</Link>\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\" primary>\n          Login\n        </Button>\n        <p className=\"or\"><span>OR</span></p>\n        <Button href={facebookLoginUrl} color='facebook' className=\"fbLoginButton\">\n          <Icon name='facebook' /> Continue with Facebook\n        </Button>\n        <Button href={googleLoginUrl} color='google' className=\"fbLoginButton\">\n          <Icon name='google' /> Sign in with Google\n        </Button>\n      </Form>\n    )\n  }\n\n  return (\n    <div>\n      {setForm()}\n    </div>\n  )\n}\n\nexport default LoginForm\n","import React, {useState, useEffect} from 'react'\nimport { useMutation } from '@apollo/client'\nimport { Form, Button, Col } from 'react-bootstrap';\nimport {LOGIN, CREATE_USER, ALL_USERS} from '../queries'\nimport {Icon, Dropdown} from 'semantic-ui-react'\nimport {\n   Link, useHistory\n} from \"react-router-dom\"\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios'\n\nconst SignupForm = ({setError, setToken, refetchUser}) => {\n  const [countries, setCountries] = useState([])\n  const history = useHistory()\n  const [ createUser, result ] = useMutation(CREATE_USER, {\n    refetchQueries: [ { query: ALL_USERS } ],\n    onError: (error) => {\n      setError(error.graphQLErrors[0].message)\n    }\n  })\n  const [ login, logInResult ] = useMutation(LOGIN, {\n    onError: (error) => {\n      setError(error.graphQLErrors[0].message)\n    }\n  })\n\n  const [firstName, setFirstName] = useState(\"\")\n  const [lastName, setLastName] = useState(\"\")\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [description, setDescription] = useState(\"\")\n  const [city, setCity] = useState(\"\")\n  const [country, setCountry] = useState(\"\")\n  const [date, setDate] = useState(new Date())\n\n  useEffect(() => {\n    axios.get('https://restcountries.eu/rest/v2/all').then(response => {\n      response.data.forEach(country => {\n        countries.push({text: country.name, flag: country.alpha2Code.toLowerCase(), key: country.alpha2Code.toLowerCase(), value: country.name})\n      })\n    })\n  }, [])\n\n  useEffect(() => {\n    if ( result.data ) {\n      login({ variables: { username, password } })\n    }\n  }, [result.data]) // eslint-disable-line\n\n  useEffect(() => {\n    if ( logInResult.data ) {\n      const token = logInResult.data.login.value\n      setToken(token)\n      localStorage.setItem('user-token', token)\n      refetchUser()\n      history.push(\"/\")\n    }\n  }, [logInResult.data]) // eslint-disable-line\n\n  const handleDateChange = date => {\n    setDate(date)\n  };\n\n  const submit = (e) => {\n    e.preventDefault()\n    const name = firstName + \" \" + lastName\n    const dateToString = date.toString()\n    console.log(typeof dateToString)\n    createUser({variables: {name, username, password, description, city, country, born: dateToString}})\n  }\n\n  return (\n    <Form onSubmit={submit}>\n      <Form.Row>\n        <Form.Group as={Col} controlId=\"formBasicFirstName\">\n          <Form.Label>First Name</Form.Label>\n          <Form.Control required type=\"text\" placeholder=\"First name\" onChange={({target}) => setFirstName(target.value)} />\n        </Form.Group>\n        <Form.Group as={Col} controlId=\"formBasicLastName\">\n          <Form.Label>Last Name</Form.Label>\n          <Form.Control required type=\"text\" placeholder=\"Last name\" onChange={({target}) => setLastName(target.value)} />\n        </Form.Group>\n      </Form.Row>\n\n      <Form.Group controlId=\"formBasicUsername\">\n        <Form.Label>Username</Form.Label>\n        <Form.Control required type=\"text\" placeholder=\"Enter username\" onChange={({target}) => setUsername(target.value)} />\n      </Form.Group>\n\n      <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n        <Form.Label>Description</Form.Label>\n        <Form.Control required as=\"textarea\" rows=\"2\" placeholder=\"Description...\" onChange={({target}) => setDescription(target.value)}/>\n      </Form.Group>\n\n      <Form.Row>\n        <Form.Group as={Col} controlId=\"formGridCity\">\n          <Form.Label>City</Form.Label>\n          <Form.Control required placeholder=\"City\" onChange={({target}) => setCity(target.value)}/>\n        </Form.Group>\n\n        <Form.Group autoComplete=\"off\" as={Col} controlId=\"formGridState\">\n          <Form.Label>Country</Form.Label>\n          <Dropdown\n            placeholder='Select Country'\n            onChange={(e, {value}) => setCountry(value)}\n            fluid\n            search\n            selection\n            options={countries}\n          />\n        </Form.Group>\n      </Form.Row>\n\n\n      <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n        <Form.Label>Date of birth</Form.Label>\n        <DatePicker\n        required\n        selected={date}\n        onChange={handleDateChange}\n        dateFormat=\"dd/MM/yyyy\"\n        />\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control required type=\"password\" placeholder=\"Password\" onChange={({target}) => setPassword(target.value)}/>\n      </Form.Group>\n      <Form.Group controlId=\"formBasicCheckbox\">\n        <Link to=\"/login\">Login</Link>\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\">\n        Sign Up\n      </Button>\n    </Form>\n  )\n}\n\nexport default SignupForm\n","const postsReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"INIT_POSTS\":\n      let posts = action.data.data.allPosts\n      const byDate = posts.slice(0)\n      byDate.sort((a, b) => {\n        const x = new Date(a.date).getTime()\n        const y = new Date(b.date).getTime()\n        return -(x - y)\n      })\n      return byDate\n    case \"ADD_LIKE\":\n      const id = action.like.post.id\n      const post = state.find(p => p.id === id)\n      const newPost = {...post, likes: post.likes.concat(action.like)}\n      console.log(\"New post\", newPost)\n      return state.map(p => p.id !== newPost.id ? p : newPost)\n    case \"REMOVE_LIKE\":\n      const postId = action.like.post.id\n      const postd = state.find(p => p.id === postId)\n      const newPostd = {...postd, likes: postd.likes.filter(l => l.id !== action.like.id)}\n      return state.map(p => p.id !== newPostd.id ? p : newPostd)\n    case \"REMOVE_POST\":\n      const removedPost = state.find(p => p.id === action.post.id)\n      const filteredPosts = state.filter(p => p.id !== removedPost.id)\n      console.log(\"POSTS\", filteredPosts)\n      return filteredPosts\n    case \"ADD_COMMENT\":\n      console.log(\"NEw comment\", action.comment)\n      const postToAdd = state.find(p => p.id === action.comment.post.id)\n      const addedPost = {...postToAdd, comments: postToAdd.comments.concat(action.comment)}\n      return state.map(p => p.id !== action.comment.post.id ? p : addedPost)\n    case \"ADD_POST\":\n      return [...state, action.data]\n    default:\n  }\n  return state\n}\n\nexport const initializePosts = (posts) => {\n  return {\n    type: \"INIT_POSTS\",\n    data: posts\n  }\n}\n\nexport const addPost = (post) => {\n  return async dispatch => {\n    dispatch({\n      type: \"ADD_POST\",\n      data: post\n    })\n  }\n}\n\nexport const addLike = (like) => {\n  return {\n    type: \"ADD_LIKE\",\n    like: like\n  }\n}\n\nexport const removeLike = (like) => {\n  return {\n    type: \"REMOVE_LIKE\",\n    like: like\n  }\n}\n\nexport const removePost = (post) => {\n  return {\n    type: \"REMOVE_POST\",\n    post: post\n  }\n}\n\nexport const addComment = (comment) => {\n  return {\n    type: \"ADD_COMMENT\",\n    comment: comment\n  }\n}\n\nexport default postsReducer\n","export const setPublishedTime = (object) => {\n  const date1 = new Date(object.date);\n  const date2 = new Date()\n  const difference = date2 - date1;\n  const diff_result = new Date(difference);\n\n  const dayDiff = Math.floor(diff_result / (1000 * 60 * 60 * 24));\n  const monthDiff = diff_result.getMonth();\n  const yearDiff = diff_result.getFullYear() - 1970;\n\n  const hourDiff = Math.floor(diff_result /  60 / 60 / 1000);\n  const minuteDiff = diff_result.getMinutes();\n  const secondDiff = diff_result.getSeconds();\n\n  if (secondDiff < 30 && minuteDiff < 1) {\n    return `Just now`\n  } else if (secondDiff < 60 && minuteDiff < 1) {\n    if (secondDiff === 1) {\n      return \"1 second ago\"\n    }\n    return `${secondDiff} seconds ago`\n  } else if (minuteDiff < 60 && hourDiff < 1) {\n    if (minuteDiff === 1) {\n      return \"1 minute ago\"\n    }\n    return `${minuteDiff} minutes ago`\n  } else if (hourDiff < 24 && dayDiff < 1) {\n    if (hourDiff === 1) {\n      return \"1 hour ago\"\n    }\n    return `${hourDiff} hours ago`\n  } else if (dayDiff < 30 && monthDiff < 1) {\n    if (dayDiff === 1) {\n      return \"1 day ago\"\n    }\n    return `${dayDiff} days ago`\n  } else if (monthDiff < 12 && yearDiff < 1) {\n    if (monthDiff === 1) {\n      return \"1 month ago\"\n    }\n    return `${monthDiff} months ago`\n  } else {\n    if (yearDiff === 1) {\n      return \"1 year ago\"\n    }\n    return `${yearDiff} years ago`\n  }\n}\n","import React, {useState, useEffect, useImperativeHandle, useRef} from 'react'\nimport { useMutation, useLazyQuery } from '@apollo/client'\nimport {ADD_COMMENT, ALL_POSTS, ALL_COMMENTS} from '../queries'\nimport { Modal } from 'react-bootstrap';\nimport {Link} from 'react-router-dom'\nimport {addComment, removeLike} from '../reducers/postsReducer'\nimport {Button, Comment, Form, Icon} from 'semantic-ui-react'\nimport {setPublishedTime} from '../utils/setPublishedTime'\nimport { useDispatch } from 'react-redux'\n\nconst CommentsModal = React.forwardRef(({showCommentsModal, setShowCommentsModal, post, setMessageHeader, emptyMessageHeader}, ref) => {\n\n  const dispatch = useDispatch()\n\n  const [content, setContent] = useState(\"\")\n  const [comments, setComments] = useState([])\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(false)\n  const [submitButtonContent, setSubmitButtonContent] = useState(\"Add Comment\")\n\n  const commentGroup = React.createRef();\n\n  const [getComments, {data, refetch, loading, networkStatus}] = useLazyQuery(ALL_COMMENTS, {\n    notifyOnNetworkStatusChange: true\n  })\n\n  const [addComment, addCommentResult] = useMutation(ADD_COMMENT, {\n    onError: (error) => {\n      setMessageHeader(error.graphQLErrors[0].message)\n      emptyMessageHeader()\n      setSubmitButtonDisabled(false)\n      setSubmitButtonContent(\"Add Comment\")\n    }\n  })\n\n  useEffect(() => {\n    if (data) {\n      setComments(data.allComments)\n      if (!loading || networkStatus !== 4) {\n        scrollToBottom()\n      }\n    }\n  }, [data])\n\n  useEffect(() => {\n    if (addCommentResult.data) {\n      console.log(\"COMMENT DATA\", addCommentResult.data)\n      setSubmitButtonDisabled(false)\n      const comment = addCommentResult.data.addComment\n      refetch()\n      setSubmitButtonContent(\"Add Comment\")\n    }\n  }, [addCommentResult.data]) // eslint-disable-line\n\n  const scrollToBottom = () => {\n    commentGroup.current.scrollIntoView({ behavior: 'smooth' })\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      setComments,\n      getComments,\n      scrollToBottom\n    }\n  })\n\n  const contentOnChange = (e) => {\n    setContent(e.target.value)\n    console.log(content)\n    console.log()\n  }\n\n  const submit = (e) => {\n    e.preventDefault()\n    setContent(\"\")\n    e.target[0].value = \"\"\n    setSubmitButtonDisabled(true)\n    setSubmitButtonContent(\"Commenting...\")\n    addComment({variables: {post: post.id, content: content}})\n  }\n\n  const commentsFeed = () => {\n    return (\n      <div className=\"comment-group\" id=\"comment-group\">\n        {comments.length === 0 ? <h3 className=\"noCommentsLabel\">No comments yet.</h3> : null}\n        {comments.map(comment =>\n          <Comment>\n            {comment.user.profilePicture ? <Comment.Avatar src={comment.user.profilePicture.imageUrl} /> : <Comment.Avatar as=\"Icon\" name=\"user\" size=\"large\" />}\n            <Comment.Content>\n              <Comment.Author as='a' href={`/users/${comment.user.id}`}>{comment.user.username}</Comment.Author>\n              <Comment.Metadata>\n                <div>{setPublishedTime(comment)}</div>\n              </Comment.Metadata>\n              <Comment.Text className=\"comment-text\">{comment.content}</Comment.Text>\n            </Comment.Content>\n          </Comment>\n        )}\n        <div ref={commentGroup}/>\n      </div>\n    )\n  }\n\n  const renderComments = () => {\n    if (loading) {\n      return (\n        <h3>Loading comments...</h3>\n      )\n    } else if (networkStatus === 4) {\n      return (\n        <h3>Refetching comments...</h3>\n      )\n    } else {\n      return (\n        commentsFeed()\n      )\n    }\n  }\n\n  if (showCommentsModal && post) {\n    return (\n      <Modal\n          show={showCommentsModal}\n          onHide={() => {\n            setShowCommentsModal(false)\n          }}\n          aria-labelledby=\"example-modal-sizes-title-lg\">\n\n        <Modal.Header closeButton>\n          <Modal.Title id=\"example-modal-sizes-title-lg\">\n            Comments\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Comment.Group className=\"commentsContainer\">\n            {renderComments()}\n          </Comment.Group>\n            <Form onSubmit={submit}>\n              <Form.TextArea onChange={contentOnChange} placeholder=\"Write a comment...\"/>\n              <Button content={submitButtonContent} labelPosition='left' icon='edit' primary disabled={submitButtonDisabled} />\n            </Form>\n        </Modal.Body>\n\n      </Modal>\n    )\n  } else {\n    return null\n  }\n})\n\nexport default CommentsModal\n","import React from 'react'\nimport {Modal} from 'react-bootstrap';\nimport {\n  BrowserRouter as Router,\n  Switch, Route, Link, useParams, Redirect\n} from \"react-router-dom\"\nimport { useDispatch, useSelector } from 'react-redux'\nimport {addPost} from '../reducers/postsReducer'\nimport {Feed, Icon} from 'semantic-ui-react'\n\nconst LikesModal = ({showLikesModal, setShowLikesModal, post}) => {\n  const dispatch = useDispatch()\n\n  if (showLikesModal && post) {\n    return (\n      <Modal\n          show={showLikesModal}\n          onHide={() => setShowLikesModal(false)}\n          aria-labelledby=\"example-modal-sizes-title-lg\"\n        >\n\n        <Modal.Header closeButton>\n          <Modal.Title id=\"example-modal-sizes-title-lg\">\n            Likes\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Feed className=\"likes-group\">\n            {post.likes.map(l =>\n                <Feed.Event>\n                  {l.user.profilePicture ? <Feed.Label image={l.user.profilePicture.imageUrl} /> : <Icon name=\"user\" size='large'/>}\n                  <Feed.Content>\n                    <Feed.Summary>\n                      {l.user.username}\n                    </Feed.Summary>\n                  </Feed.Content>\n                </Feed.Event>\n              )}\n          </Feed>\n        </Modal.Body>\n      </Modal>\n    )\n  } else {\n    return null\n  }\n}\n\nexport default LikesModal\n","import React, {useEffect, useRef, useState} from 'react'\nimport { useMutation } from '@apollo/client'\nimport {ADD_LIKE, UNLIKE, ALL_POSTS, DELETE_POST} from '../queries'\nimport {setPublishedTime} from '../utils/setPublishedTime'\nimport { Card, Button, Row, Col } from 'react-bootstrap';\nimport { Icon } from 'semantic-ui-react';\nimport {addLike, removeLike} from '../reducers/postsReducer'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  Link\n} from \"react-router-dom\"\nimport { Waypoint } from 'react-waypoint';\n\nconst Post = React.forwardRef(({p, isVideoPlaying, setIsVideoPlaying, setSelectedPost, setShowLikesModal, setShowCommentsModal, setMessageHeader, emptyMessageHeader, commentsRef, user}, ref) => {\n\n  const dispatch = useDispatch()\n  const [isVideoOnScreen, setIsVideoOnScreen] = useState(false)\n\n  const [like, likeResult] = useMutation(ADD_LIKE, {\n    refetchQueries: [ { query: ALL_POSTS } ],\n    onError: (error) => {\n      setMessageHeader(error.graphQLErrors[0].message)\n      emptyMessageHeader()\n    }\n  })\n\n  const [unlike, unlikeResult] = useMutation(UNLIKE, {\n    refetchQueries: [ { query: ALL_POSTS } ],\n    onError: (error) => {\n      setMessageHeader(error.graphQLErrors[0].message)\n      emptyMessageHeader()\n    }\n  })\n\n  const [deletePost, deletePostResult] = useMutation(DELETE_POST, {\n    refetchQueries: [{ query: ALL_POSTS }],\n    onError: (error) => {\n      setMessageHeader(error.graphQLErrors[0].message)\n      emptyMessageHeader()\n    }\n  })\n\n  const likeButton = useRef(null)\n  const unlikeButton = useRef(null)\n  const deletePostButton = useRef(null)\n\n  const postVideo = useRef(null)\n\n  useEffect(() => {\n    if (deletePostResult.data) {\n      setMessageHeader(\"Your post has been deleted\")\n      dispatch({type:\"REMOVE_POST\", post: deletePostResult.data.deletePost})\n      emptyMessageHeader()\n    }\n  }, [deletePostResult.data])\n\n  useEffect(() => {\n    if ( likeResult.data ) {\n      dispatch(addLike(likeResult.data.addLike))\n      if (likeButton.current) {\n        likeButton.current.disabled = false\n      }\n    }\n  }, [likeResult.data]) // eslint-disable-line\n\n  useEffect(() => {\n    if ( unlikeResult.data ) {\n      dispatch(removeLike(unlikeResult.data.unlike))\n      if (unlikeButton.current) {\n        unlikeButton.current.disabled = false\n      }\n    }\n  }, [unlikeResult.data]) // eslint-disable-line\n\n  useEffect(() => {\n    if (postVideo.current) {\n      if (isVideoOnScreen && !isVideoPlaying) {\n        postVideo.current.play()\n        setIsVideoPlaying(true)\n      }\n    }\n  }, [isVideoPlaying])\n\n  const removePost = (post) => {\n    const confirm = window.confirm(\"Are you sure you want to delete this post?\")\n    if(confirm) {\n      deletePost({variables: {post: post.id}})\n      if (deletePostButton.current) {\n        deletePostButton.current.disabled = true\n        deletePostButton.current.textContent = \"Deleting...\"\n      }\n      setMessageHeader(\"Deleting post...\")\n    }\n  }\n\n  const likePost = (target, post) => {\n    like({variables: {post: post.id}})\n  }\n\n  const unlikePost = (target, post) => {\n    unlike({variables: {post: post.id}})\n  }\n\n  if (!user) {\n    return null\n  }\n\n  console.log(isVideoPlaying)\n\n  const handleEnterViewport = () => {\n    setIsVideoOnScreen(true)\n    if (!isVideoPlaying) {\n      postVideo.current.play()\n      setIsVideoPlaying(true)\n    }\n  }\n\n  const handleExitViewport = () => {\n    setIsVideoOnScreen(false)\n    postVideo.current.pause()\n    setIsVideoPlaying(false)\n  }\n\n  const renderLikeButton = (post) => {\n    console.log(\"Post likes, \", post.likes)\n    if (post.likes.filter(l => l.user.username === user.username).length === 0) {\n      return (\n        <Button ref={likeButton} variant=\"primary\" onClick={({target}) => {\n          likePost(target, post)\n          target.disabled = true\n        }}>Like</Button>\n      )\n    } else {\n      return (\n        <Button ref={unlikeButton} variant=\"primary\" onClick={({target}) => {\n          unlikePost(target, post)\n          target.disabled = true\n        }}>Unlike</Button>\n      )\n    }\n  }\n\n  const renderActions = (post) => {\n    if (post.user.username !== user.username) {\n      return (\n        <div className=\"post-action-button\">\n          {renderLikeButton(post)}\n          <Button className=\"margin-left-10\" variant=\"primary\" onClick={() => {\n            setSelectedPost(post)\n            commentsRef.current.getComments({variables: {post: post.id}})\n            setShowCommentsModal(true)\n          }}>Comment</Button>\n        </div>\n      )\n    } else {\n      return (\n        <Button ref={deletePostButton} onClick={() =>\n          removePost(post)\n        } className=\"ui negative button\">Delete</Button>\n      )\n    }\n  }\n\n  const renderLink = (str, isStr) => {\n    let word = str\n    if (str.substr(0, 8) !== \"https://\" && str.substr(0,7) !== 'http://') {\n      word = 'https://' + str\n    }\n\n    if (isStr) {\n      return `<a href=${word} target=\"_blank\">${str}</a>`\n    } else {\n      return <a href={word} rel=\"noopener noreferrer\" target=\"_blank\">{str} </a>\n    }\n  }\n\n  const renderContent = (content) => {\n    var urlRE = new RegExp(\"([a-zA-Z0-9]+://)?([a-zA-Z0-9_]+:[a-zA-Z0-9_]+@)?([a-zA-Z0-9.-]+\\\\.[A-Za-z]{2,4})(:[0-9]+)?([^ ])+\");\n    if (content.length > 200) {\n      const words = content.substr(0, 200).split(\" \")\n      words.pop()\n      console.log(words.length)\n      return <div>{words.map((word, i) => word.match(urlRE) ? renderLink(word, false) : i === (words.length - 1) ? word + \"\" : word + \" \")}... <button className=\"seeMoreButton\" onClick={({target}) => {\n        target.parentNode.innerHTML = `<div> ${content.split(\" \").map((word, i) => word.match(urlRE) ? renderLink(word, true) : word + \" \").join(\" \") }</div>`\n      }}>See more</button></div>\n    } else {\n      return <div>{content.split(\" \").map((word, i) => word.match(urlRE) ? renderLink(word, false) : word + \" \")}</div>\n    }\n  }\n\n  return (\n    <div className=\"card-content\">\n      <Card className=\"post-card\">\n        <Card.Header className=\"card-header\">\n          <Row>\n            <Col>{setPublishedTime(p)}</Col>\n            <Col xs={5}></Col>\n            <Col></Col>\n          </Row>\n        </Card.Header>\n        <Card.Body>\n          <Card.Title>{p.user.profilePicture ? <img className=\"profile-picture\" src={p.user.profilePicture.imageUrl}/> : <Icon name=\"user\" size='small'/>} <Link className=\"userLink\" to={`/users/${p.user.id}`}>{p.user.username}</Link></Card.Title>\n          <Card.Text className=\"postContent\">\n            {renderContent(p.content)}\n          </Card.Text>\n        </Card.Body>\n\n        <div className=\"cardImageContainer\">{p.image ? <a href={p.image.imageUrl}> <Card.Img className=\"card-image\" variant=\"top\" src={p.image.imageUrl} /></a> : null}\n        {p.video\n        ?\n        <Waypoint\n          onEnter={handleEnterViewport}\n          onLeave={handleExitViewport}\n        >\n          <video ref={postVideo} className=\"post-video\" controls loop>\n             <source src={p.video.videoUrl} type=\"video/mp4\" />\n             <source src={p.video.videoUrl} type=\"video/ogg\" />\n             <source src={p.video.videoUrl} type=\"video/webm\" />\n             <source src={p.video.videoUrl} type=\"video/mov\" />\n          </video>\n        </Waypoint>\n        :\n        null\n        }\n        </div>\n        <Card.Body className=\"cardActions\">\n          <Button variant=\"link\" onClick={() => {\n            setSelectedPost(p)\n            commentsRef.current.getComments({variables: {post: p.id}})\n            setShowCommentsModal(true)\n          }}>{p.comments.length} comments</Button>\n          <Button variant=\"link\" onClick={() => {\n            setSelectedPost(p)\n            setShowLikesModal(true)\n          }}>{p.likes.length} likes</Button>\n          {renderActions(p)}\n        </Card.Body>\n      </Card>\n    </div>\n  )\n})\n\nexport default Post\n","import React, {useState, useEffect} from 'react'\nimport { useMutation } from '@apollo/client'\nimport {ALL_POSTS} from '../queries'\nimport { useSelector, useDispatch } from 'react-redux'\nimport CommentsModal from './CommentsModal'\nimport LikesModal from './LikesModal'\nimport {removePost} from '../reducers/postsReducer'\nimport Post from './Post'\n\nconst Homepage = ({logout, setMessageContent, setMessageHeader, emptyMessageHeader}) => {\n  const dispatch = useDispatch()\n\n  const posts = useSelector(state => state.posts)\n  const user = useSelector(state => state.user)\n  const [selectedPost, setSelectedPost] = useState(null)\n  const [isVideoPlaying, setIsVideoPlaying] = useState(false)\n\n  console.log(\"USER IN STATE\", user)\n  const [showLikesModal, setShowLikesModal] = useState(false)\n  const [showCommentsModal, setShowCommentsModal] = useState(false)\n\n  const commentsRef = React.createRef()\n\n  console.log(\"Post2\", selectedPost)\n  console.log(\"SHow likes modal\", showLikesModal)\n\n  return (\n    <div>\n      <LikesModal showLikesModal={showLikesModal} setShowLikesModal={setShowLikesModal} post={selectedPost}/>\n      <CommentsModal setMessageHeader={setMessageHeader} emptyMessageHeader={emptyMessageHeader} showCommentsModal={showCommentsModal} setShowCommentsModal={setShowCommentsModal} post={selectedPost} ref={commentsRef}/>\n\n      <div className=\"cards\">\n        {posts.map(p =>\n          <Post p={p} isVideoPlaying={isVideoPlaying} setIsVideoPlaying={setIsVideoPlaying} setSelectedPost={setSelectedPost} setShowLikesModal={setShowLikesModal} setShowCommentsModal={setShowCommentsModal} setMessageHeader={setMessageHeader} emptyMessageHeader={emptyMessageHeader} commentsRef={commentsRef} user={user}/>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default Homepage\n","import React from 'react'\n\nconst UploadPicture = ({setImage, image}) => {\n\n  return (\n    <div>\n      <input\n      type=\"file\"\n      value={image ? `C:\\\\fakepath\\\\${image.name}` : \"\" }\n      onChange={({ target: { validity, files: [file] } }) =>\n        validity.valid && setImage(file)\n      }\n      />\n    </div>\n  );\n};\n\nexport default UploadPicture\n","import React, {useState, useEffect} from 'react'\nimport { useMutation } from '@apollo/client'\nimport {ADD_POST, ALL_POSTS} from '../queries'\nimport { Modal, Form } from 'react-bootstrap';\nimport { useSelector } from 'react-redux'\nimport UploadPicture from './UploadPicture'\nimport { Button } from 'semantic-ui-react'\nimport {isFileImageOrVideo} from '../utils/fileValidator'\nimport imageCompression from 'browser-image-compression';\n\nconst AddPostModal = ({showModal, setShowModal, setMessageContent, setMessageHeader, emptyMessageHeader}) => {\n  const [content, setContent] = useState(\"\")\n  const [image, setImage] = useState(\"\")\n  const [addPost, addPostResult] = useMutation(ADD_POST, {\n    onError: (error) => {\n      setMessageHeader(error.graphQLErrors[0].message)\n      emptyMessageHeader()\n    }\n  })\n\n  useEffect(() => {\n    if (addPostResult.data) {\n      console.log(\"POSt added\", addPostResult.data.addPost)\n      setMessageHeader(\"Post added successfully!\")\n      emptyMessageHeader()\n    }\n  }, [addPostResult.data])\n\n  const user = useSelector(state => state.user)\n\n  const handleImageUpload = async (imageFile) => {\n\n  console.log('originalFile instanceof Blob', imageFile instanceof Blob); // true\n  console.log(`originalFile size ${imageFile.size / 1024 / 1024} MB`);\n\n  const options = {\n    maxSizeMB: 1,\n    useWebWorker: true\n  }\n\n  try {\n    const compressedFile = await imageCompression(imageFile, options);\n    console.log('compressedFile instanceof Blob', compressedFile instanceof Blob); // true\n    console.log(`compressedFile size ${compressedFile.size / 1024 / 1024} MB`); // smaller than maxSizeMB\n\n    addPost({variables: {content, file: compressedFile}})\n  } catch (error) {\n    console.log(\"ERROR compressing file\", error)\n  }\n\n}\n\n  const submit = (e) => {\n    e.preventDefault()\n\n    if (image) {\n      if (isFileImageOrVideo(image) === false) {\n        setMessageHeader(\"Please include image or video\")\n        emptyMessageHeader()\n      } else {\n        setShowModal(false)\n        if (image['type'].split(\"/\")[0] === \"image\") {\n          handleImageUpload(image)\n        } else {\n          addPost({variables: {content, file: image}})\n        }\n        setMessageHeader(\"Adding post...\")\n        setImage(\"\")\n      }\n    } else {\n      addPost({variables: {content, file: null}})\n      setShowModal(false)\n      setMessageHeader(\"Adding post...\")\n    }\n  }\n\n  const contentOnChange = (event) => {\n    const content = event.target.value\n    setContent(content)\n    if( content.substr(0,content.length).match(/(?:^|\\r?\\n\\s*)$/)\n       && content.substr(content.length).match(/^(?:\\s*\\r?\\n|$)/)) {\n         console.log(\"empty\")\n      }\n  }\n\n  if (showModal && user) {\n    const firstName = user.name.split(\" \")[0]\n\n    const placeholderText = `What is on your mind, ${firstName}?`\n    return (\n      <Modal\n          size=\"lg\"\n          show={showModal}\n          onHide={() => setShowModal(false)}\n          aria-labelledby=\"example-modal-sizes-title-lg\"\n        >\n          <Modal.Header closeButton>\n            <Modal.Title id=\"example-modal-sizes-title-lg\">\n              Add Post\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form onSubmit={submit}>\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Content</Form.Label>\n                <Form.Control required as=\"textarea\" rows=\"2\" placeholder={placeholderText} onChange={contentOnChange}/>\n\n              </Form.Group>\n              <Form.Group controlId=\"formImage\">\n                <Form.Label>Image</Form.Label>\n                <UploadPicture setImage={setImage} image={image}/>\n                {image\n                  ?\n                <div className=\"addpost-image-container\">\n                  {image.type.split(\"/\")[0] === \"image\" ? <img className=\"addpost-image\" src={URL.createObjectURL(image)}/> : null}\n                  {\n                  image.type.split(\"/\")[0] === \"video\"\n                  ?\n                  <video controls className=\"addpost-image\" >\n                     <source src={URL.createObjectURL(image)} type=\"video/mp4\" />\n                     <source src={URL.createObjectURL(image)} type=\"video/ogg\" />\n                     <source src={URL.createObjectURL(image)} type=\"video/webm\" />\n                  </video>\n                  :\n                  null\n                }\n                  <Button icon='close' onClick={() => setImage(\"\")}/>\n                </div>\n                :\n                null\n                }\n              </Form.Group>\n              <Button primary type=\"submit\" disabled={content === \"\" ? true : false}>\n                Submit\n              </Button>\n            </Form>\n          </Modal.Body>\n      </Modal>\n    )\n  } else {\n    return null\n  }\n}\n\nexport default AddPostModal\n","export const isFileImageOrVideo = (file) => {\n    return file && (file['type'].split('/')[0] === 'image' || file['type'].split('/')[0] === 'video');\n}\n\nexport const isFileImage = (file) => {\n  return file && (file['type'].split('/')[0] === 'image')\n}\n","import React, {useState, useEffect} from 'react'\nimport { Card, Image, Input } from 'semantic-ui-react';\nimport { Col, Row } from 'react-bootstrap';\nimport {\n  Link\n} from \"react-router-dom\"\nimport { useSelector } from 'react-redux'\n\nconst Users = ({logout}) => {\n\n  const allUsers = useSelector(state => state.users)\n\n  const [users, setUsers] = useState(allUsers.filter(user => user.id !== \"\"))\n  const [search, setSearch] = useState([])\n\n  console.log(\"USers \", users)\n\n  users.filter(user => user.name === \"Saska Rauhala\")\n\n  const filterUsers = (e) => {\n    setSearch(e.target.value.toLowerCase().split(\" \"))\n  }\n\n  console.log(\"Users\", allUsers)\n\n  useEffect(() => {\n    if (search.length === 0 || (search.length === 1 && search[0] === \"\")) {\n      setUsers(allUsers.filter(user => user.id !== \"\"))\n    } else {\n      setUsers(allUsers.filter(user => {\n        const f = search.some(val => val !== \"\" ? user.name.toLowerCase().indexOf(val) !== -1 : null)\n        return f\n      }).filter(user => search.some(val => val !== \"\" ? user.name.toLowerCase().indexOf(val) !== -1 : null)))\n    }\n  }, [search])\n\n  return (\n    <div className=\"users-container\">\n      {search.length}\n      <div className=\"search-container\">\n        <Input icon=\"search\" placeholder='Search users...' id=\"search-input\" onChange={filterUsers}/>\n      </div>\n      <Row className=\"users-row\">\n      {users.map((user, i) =>\n          <Col sm={12} md={6} lg={4} className=\"user-card\">\n          <Card className=\"users-card-content\">\n            {user.profilePicture ? <Image src={user.profilePicture.imageUrl} wrapped ui={false} /> : null}\n            <Card.Content>\n              <Card.Header><Link className=\"userLink\" to={`/users/${user.id}`}>{user.name}</Link></Card.Header>\n              <Card.Meta>\n                <span className='date'>@{user.username}</span>\n              </Card.Meta>\n              <Card.Description className=\"card-description\">\n                {user.description}\n              </Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n              {user.posts.length} {user.posts.length === 1 ? \"post\" : \"posts\"}\n            </Card.Content>\n          </Card>\n          </Col>\n      )}\n      </Row>\n    </div>\n  )\n}\n\nexport default Users\n","import React, {useState, useEffect, useRef} from 'react'\nimport { useMutation, useQuery } from '@apollo/client'\nimport {ADD_MESSAGE, ALL_MESSAGES} from '../queries'\nimport { Button, Comment, Form, Header } from 'semantic-ui-react'\nimport {setPublishedTime} from '../utils/setPublishedTime'\nimport ScrollToBottom from 'react-scroll-to-bottom';\n\nconst Chat = ({user}) => {\n\n  const messages = useQuery(ALL_MESSAGES)\n\n  const [message, setMessage] = useState(\"\")\n  const [addMessage, addMessageResult] = useMutation(ADD_MESSAGE, {\n    onError: (error) => {\n      console.log(error.graphQLErrors[0].message)\n    }\n  })\n\n  const messageGroup = React.createRef()\n\n\n  console.log(\"username\", user)\n  const scrollToBottom = () => {\n    messageGroup.current.scrollIntoView({\n      behavior: 'smooth',\n      block: 'center',\n      inline: 'center',\n    });\n  }\n\n  useEffect(() => {\n    if (addMessageResult.data) {\n      setMessage(\"\")\n    }\n  }, [addMessageResult.data])\n\n  useEffect(() => {\n    if (messages.data) {\n      if (messageGroup.current !== null) {\n        scrollToBottom()\n        console.log(\"GROUP\", messageGroup.current)\n      }\n    }\n  }, [messages.data])\n\n  useEffect(() => {\n    if (messageGroup.current) {\n      scrollToBottom()\n      console.log(\"Message ge\", messageGroup.current)\n    }\n  })\n\n  const submit = (e) => {\n    e.preventDefault()\n    addMessage({variables: {message}})\n  }\n\n  if (messages.loading) {\n    return <h1>Loading messages...</h1>\n  } else {\n\n  }\n\n  if (!user || messageGroup === null) {\n    return null\n  }\n\n  return (\n    <div>\n      <Comment.Group>\n        <div className=\"messageContainer\">\n        {messages.data.allMessages.map((message, i) =>\n            <Comment className={user.username === message.user.username ? 'rightMessage justifyEnd' : 'leftMessage justifyStart'}>\n              <div className={user.username === message.user.username ? 'messageBox messageBoxBlue colorWhite' : 'messageBox'}>\n                <Comment.Avatar src={message.user.profilePicture ? message.user.profilePicture.imageUrl : null}/>\n                <Comment.Content className=\"pl-5\">\n                  <Comment.Author as='a'>{message.user.name}</Comment.Author>\n                  <Comment.Metadata>\n                    <div>{setPublishedTime(message)}</div>\n                  </Comment.Metadata>\n                  <Comment.Text>{message.message}</Comment.Text>\n                </Comment.Content>\n              </div>\n            </Comment>\n        )}\n        <div ref={messageGroup}/>\n        </div>\n        <Form reply onSubmit={submit}>\n          <Form.TextArea className=\"messageTextarea\" onChange={({target}) => setMessage(target.value)} placeholder=\"Add message...\" value={message}/>\n          <Button disabled={message ? false : true} content='Add Message' labelPosition='left' icon='edit' primary />\n        </Form>\n      </Comment.Group>\n    </div>\n  )\n}\n\nexport default Chat\n","import React, {useEffect, useState} from 'react'\nimport {\n  useParams\n} from \"react-router-dom\"\nimport {UPLOAD_FILE, GET_USER} from '../queries'\nimport { useMutation} from '@apollo/client'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {Icon, Item, Button, Form} from 'semantic-ui-react'\nimport {setPublishedTime} from '../utils/setPublishedTime'\nimport imageCompression from 'browser-image-compression';\n\nconst User = ({setMessageHeader, emptyMessageHeader}) => {\n  const [signleUpload, uploadFileResult] = useMutation(UPLOAD_FILE, {\n    refetchQueries: [ { query: GET_USER } ],\n    onError: (error) => {\n      setMessageHeader(error.graphQLErrors[0].message)\n      emptyMessageHeader()\n    }\n  })\n\n  const [firstName, setFirstName] = useState(\"\")\n  const [lastName, setLastName] = useState(\"\")\n  const [username, setUsername] = useState(\"\")\n  const [description, setDescription] = useState(\"\")\n\n  const id = useParams().id\n  const users = useSelector(state => state.users)\n  const currentUser = useSelector(state => state.user)\n  const user = users.find(user => user.id === id)\n  const [image, setImage] = useState(\"\")\n\n  useEffect(() => {\n    if (uploadFileResult.data) {\n      setMessageHeader(\"Profile picture changed\")\n      emptyMessageHeader()\n    }\n  }, [uploadFileResult.data])\n\n  useEffect(() => {\n    setFirstName(currentUser.name.split(\" \")[0])\n    setLastName(currentUser.name.split(\" \")[1])\n    setUsername(currentUser.username)\n    setDescription(currentUser.description)\n  }, [currentUser])\n\n  const handleImageUpload = async (imageFile) => {\n\n  console.log('originalFile instanceof Blob', imageFile instanceof Blob); // true\n  console.log(`originalFile size ${imageFile.size / 1024 / 1024} MB`);\n\n  const options = {\n    maxSizeMB: 1,\n    useWebWorker: true\n  }\n\n  try {\n    const compressedFile = await imageCompression(imageFile, options);\n    console.log('compressedFile instanceof Blob', compressedFile instanceof Blob); // true\n    console.log(`compressedFile size ${compressedFile.size / 1024 / 1024} MB`); // smaller than maxSizeMB\n\n    signleUpload({ variables: { file: compressedFile } })\n  } catch (error) {\n    console.log(\"ERROR compressing file\", error)\n  }\n\n}\n\n  if (!user) {\n    return <h1>This user was not found</h1>\n  }\n\n  return (\n    <div>\n    <Item.Group>\n      <Item>\n        <div className=\"profilePictureContainer\">\n          {user.profilePicture ? <Item.Image size=\"medium\" src={image ? URL.createObjectURL(image) : user.profilePicture.imageUrl}/> : <Icon name=\"user\" size='small'/>}\n            {user.id === currentUser.id ? <Button icon='photo' onClick={({target}) => {\n              const fileInput = document.getElementById(\"profilePictureInput\")\n              console.log(fileInput)\n              fileInput.click()\n            }} /> : null}\n\n            <input\n            id=\"profilePictureInput\"\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={({ target: { validity, files: [file] } }) => {\n              validity.valid && handleImageUpload(file) && setImage(file) && setMessageHeader(\"Changing profile picture...\")\n            }}\n            />\n        </div>\n        <Item.Content className=\"profileContent\">\n          <Item.Header>{user.name} | @{user.username}</Item.Header>\n          <Item.Meta className=\"profileMeta\">\n            <p className='stay'>{setPublishedTime({date: user.born}).split(\" \").map((word, i) => i<2 ? word + \" \" : null)} old</p>\n            <p>Lives in {user.city}, {user.country}</p>\n          </Item.Meta>\n          <Item.Description className=\"profileDescription\">{user.description}</Item.Description>\n        </Item.Content>\n      </Item>\n    </Item.Group>\n\n    {user.id === currentUser.id\n    ?\n    <Form>\n        <h2>Personal information</h2>\n        <Form.Group widths='equal'>\n          <Form.Input fluid label='First name' value={firstName} onChange={({target}) => setFirstName(target.value)} placeholder='First name' />\n          <Form.Input fluid label='Last name' value={lastName} onChange={({target}) => setLastName(target.value)} placeholder='Last name' />\n          <Form.Input fluid label='Username' value={username} onChange={({target}) => setUsername(target.value)} placeholder='Last name' />\n        </Form.Group>\n        <Form.TextArea className=\"descriptionEdit\" label='Description' value={description} onChange={({target}) => setDescription(target.value)} placeholder='Your description...' />\n\n        <Form.Button primary>Save</Form.Button>\n      </Form>\n\n      :\n      null\n    }\n    </div>\n  )\n}\n\nexport default User\n","const userReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"INIT_USER\":\n      return action.data.me\n    case \"CLEAR_USER\":\n      return null\n    default:\n  }\n  return state\n}\n\nexport const initializeUser = (user) => {\n  return {\n    type: \"INIT_USER\",\n    data: user\n  }\n}\nexport const clearUser = () => {\n  return {\n    type: \"CLEAR_USER\"\n  }\n}\n\nexport default userReducer\n","const usersReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"INIT_USERS\":\n      console.log(\"data in init users\", action.data)\n      return action.data.data.allUsers\n    default:\n  }\n  return state\n}\n\nexport const initializeUsers = (users) => {\n  return {\n    type: \"INIT_USERS\",\n    data: users\n  }\n}\n\nexport default usersReducer\n","import React, {useState, useEffect} from 'react'\nimport { useQuery, useApolloClient, useSubscription, gql } from '@apollo/client'\nimport LoginForm from './components/LoginForm'\nimport {ALL_USERS, ALL_POSTS, GET_USER, UPLOADS, POST_ADDED, ALL_MESSAGES, MESSAGE_ADDED, MORE_POSTS} from './queries'\nimport './index.css'\nimport { Alert, Button } from 'react-bootstrap';\nimport { Icon } from 'semantic-ui-react';\nimport {\n  BrowserRouter as Router,\n  Switch, Route, Link, Redirect\n} from \"react-router-dom\"\nimport { useDispatch, useSelector } from 'react-redux'\nimport SignupForm from './components/SignupForm'\nimport Homepage from './components/Homepage'\nimport AddPostModal from './components/AddPostModal'\nimport Users from './components/Users'\nimport Chat from './components/Chat'\nimport User from './components/User'\nimport {initializePosts} from './reducers/postsReducer'\nimport {initializeUser, clearUser} from './reducers/userReducer'\nimport {initializeUsers} from './reducers/usersReducer'\nimport {Message} from 'semantic-ui-react'\n\nconst App = () => {\n\n  const dispatch = useDispatch()\n  const user = useSelector(state => state.user)\n  const users = useQuery(ALL_USERS)\n  const posts = useQuery(ALL_POSTS)\n  const [token, setToken] = useState(null)\n  const client = useApolloClient()\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [showModal, setShowModal] = useState(false)\n  const [messageHeader, setMessageHeader] = useState(\"\")\n  const [messageContent, setMessageContent] = useState(\"\")\n  const [showNewPostsButton, setShowNewPostsButton] = useState(false)\n\n  const {loading, error, data, refetch, networkStatus} = useQuery(GET_USER, {\n    notifyOnNetworkStatusChange: true,\n  })\n\n  const updatePostCacheWith = (addedPost) => {\n    const includedIn = (set, object) =>\n      set.map(p => p.id).includes(object.id)\n\n    const dataInStore = client.readQuery({ query: ALL_POSTS })\n    if (!includedIn(dataInStore.allPosts, addedPost)) {\n      client.writeQuery({\n        query: ALL_POSTS,\n        data: { allPosts : dataInStore.allPosts.concat(addedPost) }\n      })\n    }\n  }\n\n  const updateMessageCacheWith = (addedMessage) => {\n    const includedIn = (set, object) =>\n      set.map(p => p.id).includes(object.id)\n\n    const dataInStore = client.readQuery({ query: ALL_MESSAGES })\n    if (!includedIn(dataInStore.allMessages, addedMessage)) {\n      client.writeQuery({\n        query: ALL_MESSAGES,\n        data: { allMessages : dataInStore.allMessages.concat(addedMessage) }\n      })\n    }\n  }\n\n  useSubscription(POST_ADDED, {\n    onSubscriptionData: ({ subscriptionData }) => {\n      console.log(\"ADDED POST\", subscriptionData)\n      const addedPost = subscriptionData.data.postAdded\n      if (addedPost.user.username !== user.username) {\n        setShowNewPostsButton(true)\n      } else {\n        updatePostCacheWith(addedPost)\n      }\n    }\n  })\n\n  useSubscription(MESSAGE_ADDED, {\n    onSubscriptionData: ({ subscriptionData }) => {\n      console.log(\"ADDED MESSAGE\", subscriptionData)\n      updateMessageCacheWith(subscriptionData.data.messageAdded)\n    }\n  })\n\n  document.title = \"Social Media App\"\n\n  const emptyMessageHeader = () => {\n    setTimeout(() => {\n      setMessageHeader(\"\")\n    }, 3000)\n  }\n\n  const refetchUser = () => {\n    refetch()\n  }\n\n  useEffect(() => {\n    const token = localStorage.getItem('user-token')\n    if ( token ) {\n      setToken(token)\n    }\n  }, [])\n\n  if (networkStatus === 4) return <div className=\"loader\"></div>;\n\n  if (users.loading || loading || posts.loading) {\n    return <div className=\"loader\"></div>\n  } else {\n    console.log(\"MORE POSTS\", posts)\n    dispatch(initializePosts(posts))\n    dispatch(initializeUsers(users))\n    dispatch(initializeUser(data))\n\n  }\n\n  const notify = (message) => {\n    setErrorMessage(message)\n    console.log(\"MME\")\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 5000)\n  }\n\n  const updatePosts = () => {\n    posts.refetch()\n    setShowNewPostsButton(false)\n  }\n\n  const Notify = ({errorMessage}) => {\n    if ( !errorMessage ) {\n      return null\n    }\n    return (\n      <Alert variant=\"danger\">\n        {errorMessage}\n      </Alert>\n    )\n  }\n\n  const logout = () => {\n    setToken(null)\n    dispatch(clearUser())\n    localStorage.clear()\n    client.resetStore()\n  }\n\n  const loginForm = () => {\n    return (\n      <div>\n        <LoginForm setToken={setToken} refetchUser={refetchUser} setError={notify}/>\n      </div>\n    )\n  }\n\n  const renderHomepage = () => {\n    if (!token) {\n      return (\n        <Redirect to='/login' />\n      )\n    } else {\n      return (\n        <div>\n          {showNewPostsButton ? <Button variant=\"primary\" className=\"updatePostsButton\" onClick={updatePosts}> New posts </Button> : null }\n          <Homepage logout={logout} setMessageHeader={setMessageHeader} setMessageContent={setMessageContent} emptyMessageHeader={emptyMessageHeader}/>\n        </div>\n      )\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <Router>\n        <Link className=\"homeLink\" to=\"/\"><h1 className=\"center\">Social Media App</h1></Link>\n        <Notify errorMessage={errorMessage}/>\n        <AddPostModal showModal={showModal} setShowModal={setShowModal} setMessageContent={setMessageContent} setMessageHeader={setMessageHeader} emptyMessageHeader={emptyMessageHeader}/>\n        {user && window.location.href !== 'http://localhost:3000/login' ?\n        <div className=\"homepage-actions\">\n          {user ? <p>{user.profilePicture ? <img src={user.profilePicture.imageUrl} className=\"profile-picture\"/> : <Icon name=\"user\" size='small'/>} <strong>Welcome back {user.name}!</strong></p> : null}\n          <Button variant=\"secondary\" onClick={logout}>Log out</Button>\n\n          <Link to=\"/\"><Button variant=\"primary\" className=\"margin-left-10\">Home</Button></Link>\n          <Link to=\"/users\"><Button variant=\"primary\" className=\"margin-left-10\">Users</Button></Link>\n          <Link to=\"/chat\"> <Button variant=\"primary\" className=\"margin-left-10\">Chat</Button></Link>\n        </div>\n        :\n        null\n        }\n        <Switch>\n\n          <Route path=\"/login\">\n            {loginForm()}\n          </Route>\n\n          <Route path=\"/signup\">\n            <SignupForm setError={setErrorMessage} setToken={setToken} refetchUser={refetchUser}/>\n          </Route>\n\n          <Route path=\"/chat\">\n            {token ? <Chat user={user}/> : <Redirect to='/login' />}\n          </Route>\n\n          <Route path=\"/users/:id\">\n            {token ? <User setMessageHeader={setMessageHeader} emptyMessageHeader={emptyMessageHeader} /> : <Redirect to=\"/login\"/>}\n          </Route>\n\n          <Route path=\"/users\">\n            {token ? <Users/> : <Redirect to='/login' />}\n          </Route>\n\n          <Route path=\"/\">\n            <Button variant=\"primary\" className=\"add-post-button\" onClick={() => setShowModal(true)}>Add Post</Button>\n\n            {renderHomepage()}\n          </Route>\n        </Switch>\n      </Router>\n      {messageHeader !== \"\"\n      ?\n        <Message\n          className=\"message\"\n          color=\"black\"\n          header={messageHeader}\n          content={messageContent}\n        />\n      :\n      null\n      }\n    </div>\n  )\n}\n\nexport default App\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport postsReducer from './reducers/postsReducer'\nimport userReducer from './reducers/userReducer'\nimport usersReducer from './reducers/usersReducer'\n\nconst reducer = combineReducers({\n  posts: postsReducer,\n  user: userReducer,\n  users: usersReducer\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(applyMiddleware(thunk))\n)\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport {\n  ApolloClient, ApolloProvider, HttpLink, InMemoryCache, split, ApolloLink\n} from '@apollo/client'\nimport { setContext } from 'apollo-link-context'\nimport { createUploadLink } from 'apollo-upload-client'\nimport store from './store.js'\nimport { Provider } from 'react-redux'\nimport { getMainDefinition } from '@apollo/client/utilities'\nimport { WebSocketLink } from '@apollo/link-ws'\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('user-token')\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `bearer ${token}` : null,\n    }\n  }\n})\n\nconst httpLink = createUploadLink({ uri: 'https://ancient-harbor-05591.herokuapp.com/' })\n\nconst wsLink = new WebSocketLink({\n  uri: `ws://ancient-harbor-05591.herokuapp.com/`,\n  options: {\n    reconnect: true\n  }\n})\nconst splitLink = split(\n  ({ query }) => {\n    const definition = getMainDefinition(query)\n    return (\n      definition.kind === 'OperationDefinition' &&\n      definition.operation === 'subscription'\n    );\n  },\n  wsLink,\n  authLink.concat(httpLink),\n)\n\nconst link = ApolloLink.from([splitLink]);\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: splitLink\n})\n\nReactDOM.render(\n  <Provider store={store}>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}