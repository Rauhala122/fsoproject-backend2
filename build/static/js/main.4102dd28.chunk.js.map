{"version":3,"sources":["App.js","index.js"],"names":["ALL_USERS","gql","ALL_POSTS","App","users","useQuery","posts","loading","console","log","data","allUsers","map","u","username","join","allPosts","p","key","id","content","user","authLink","setContext","_","headers","token","localStorage","getItem","authorization","httpLink","HttpLink","uri","client","ApolloClient","cache","InMemoryCache","link","concat","ReactDOM","render","ApolloProvider","document","getElementById"],"mappings":"mkBAGA,IAAMA,EAAYC,YAAH,KASTC,EAAYD,YAAH,KAuCAE,EA1BH,WACV,IAAMC,EAAQC,YAASL,GACjBM,EAAQD,YAASH,GAEvB,OAAIE,EAAMG,SAAWD,EAAMC,QAClB,4CAEPC,QAAQC,IAAI,QAASL,EAAMM,KAAKC,UAChCH,QAAQC,IAAI,QAASH,GAIrB,6BACGF,EAAMM,KAAKC,SAASC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,YAAUC,KAAK,MAE9CT,EAAMI,KAAKM,SAASJ,KAAI,SAAAK,GAAC,OACxB,yBAAKC,IAAKD,EAAEE,IACTF,EAAEG,QAEFH,EAAEI,KAAKP,gB,wCCpCZQ,EAAWC,aAAW,SAACC,EAAD,GAAqB,IAAfC,EAAc,EAAdA,QAC1BC,EAAQC,aAAaC,QAAQ,2BACnC,MAAO,CACLH,QAAQ,2BACHA,GADE,IAELI,cAAeH,EAAK,iBAAaA,GAAU,WAK3CI,EAAW,IAAIC,IAAS,CAAEC,IAAK,0BAE/BC,EAAS,IAAIC,IAAa,CAC9BC,MAAO,IAAIC,IACXC,KAAMf,EAASgB,OAAOR,KAGxBS,IAASC,OACP,kBAACC,EAAA,EAAD,CAAgBR,OAAQA,GACtB,kBAAC,EAAD,OAEFS,SAASC,eAAe,W","file":"static/js/main.4102dd28.chunk.js","sourcesContent":["import React from 'react'\nimport { gql, useQuery } from '@apollo/client'\n\nconst ALL_USERS = gql`\n  query {\n    allUsers  {\n      name\n      username\n    }\n  }\n`\n\nconst ALL_POSTS = gql`\n  query {\n    allPosts {\n      content\n      date\n      time\n      user {\n        username\n      }\n    }\n  }\n`\n\nconst App = () => {\n  const users = useQuery(ALL_USERS)\n  const posts = useQuery(ALL_POSTS)\n\n  if (users.loading || posts.loading)  {\n    return <div>loading...</div>\n  } else {\n    console.log(\"Users\", users.data.allUsers)\n    console.log(\"Posts\", posts)\n  }\n\n  return (\n    <div>\n      {users.data.allUsers.map(u => u.username).join(', ')}\n\n      {posts.data.allPosts.map(p =>\n        <div key={p.id}>\n          {p.content}\n          \n          {p.user.username}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport {\n  ApolloClient, ApolloProvider, HttpLink, InMemoryCache\n} from '@apollo/client'\nimport { setContext } from 'apollo-link-context'\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('phonenumbers-user-token')\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `bearer ${token}` : null,\n    }\n  }\n})\n\nconst httpLink = new HttpLink({ uri: 'http://localhost:4000' })\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: authLink.concat(httpLink)\n})\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}